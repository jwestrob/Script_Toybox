import os, sys, csv, time
import argparse
from Bio import SearchIO


parser = argparse.ArgumentParser(description='Parse HMMER3 output, which is obtuse and disgusting.')

parser.add_argument('-i', metavar='hmmer3 output file to parse', help='Either the tab-table output (use -t flag) or the text output (use -x flag).')
parser.add_argument('-t', action='store_true', default=False, help='Use if this is the tab table generated by HMMER3.')
parser.add_argument('-x', action='store_true', default=False, help='Use if this is the text file generated by HMMER3.')
parser.add_argument('-hits', action='store_true', default=False, help='Returns the names of the protein hits found by HMMER3.')
parser.add_argument('-out', metavar='[name of CSV outfile]', help="Gimme a name! (include extension)")

args = parser.parse_args()

infile = args.i
tab = args.t
txt = args.x
hits = args.hits
outfile = args.out
if hits == False:
    print("No actions selected. You're just gonna load a file into memory for no reason? DENIED")
    print("I also acknowledge that I once intended to add functionalities to this program that don't exist since I put this into a larger pipeline.")
    print("I humbly suggest you cannibalize the code in this script for whatever purpose you might have in mind if it doesn't involve extracting FASTA contig IDs.")
    sys.exit()

def get_hits(infile):
    with open(infile, 'rU') as handle:
        if tab:
            for record in SearchIO.parse(handle, 'hmmer3-tab'):
                return list(record.hit_keys)
        if txt:
            for record in SearchIO.parse(handle, 'hmmer3-text'):
                return list(record.hit_keys)
def main():

    if hits:
            hits_names = get_hits(infile)
    print("Printing hits names to " + outfile)
    with open(outfile, 'w') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(hits_names)
    print("Boogie")

if __name__ == "__main__":
    main()
